@model SignInModel
@{
    ViewData["Title"] = "Log in";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}
@using System.Collections.Generic
@using System.Linq
@using PVT.Money.Data
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Authentication
@using Microsoft.AspNetCore.Identity;
@inject SignInManager<ApplicationUser> SignInManager

<!--<div class="col-sm-offset-4 col-sm-4 wrap_login">-->
<div class="login-container">
    <div class="row">
        <div class="col-md-12">
            <div class="text-center m-b-md">
                <h3>PLEASE LOGIN TO APP</h3>
                <small>This is the best app ever!</small>
            </div>
            <div class="hpanel">
                <div class="panel-body">
                    <form method="post" asp-action="Login" asp-controller="Account" data-toggle="validator">

                        <div class="form-group">

                            @*@Html.ValidationMessageFor(model=>model.Login)*@
                            <label class="control-label" for="username">Username</label>
                            <span asp-validation-for="Login" class="text-danger"></span>
                            @Html.TextBoxFor(model => model.Login, new { @class = "form-control", placeholder = "Login" })
                            <div class="help-block">Not empty</div>
                        </div>
                        <div class="form-group">
                            <label class="control-label" for="password">Password</label>
                            <span asp-validation-for="Password" class="text-danger"></span>
                            <input type="password" asp-for="Password" data-minlength="6" class="form-control" id="Password" placeholder="Password" required>
                            <div class="help-block">Minimum of 6 characters</div>
                        </div>
                        <input class="btn btn-primary btn-block" type="submit" value="Submit" />
                        <a class="btn btn-default btn-block" href="~/Account/Register">Register</a>
                    </form>

                    <section>
                        <h4>Use another service to log in.</h4>
                        <hr />
                        @{
            var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
            if (loginProviders.Count == 0)
            {
                <div>
                    <p>
                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                        for details on setting up this ASP.NET application to support logging in via external services.
                    </p>
                </div>
}
else
{
                <form asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                    <div>
                        <p>
                            @foreach (var provider in loginProviders)
            {
                <button type="submit" class="btn btn-default" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
}
                        </p>
                    </div>
                </form>
}
                        }
                    </section>
                    <div class="form-group">
                        <p>
                            <a asp-action="ForgotPassword">Forgot your password?</a>
                        </p>
                       
                    </div>
                </div>
                <div class="clear"></div>
            </div>
        </div>
    </div>
</div>
@section Scripts
    {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
