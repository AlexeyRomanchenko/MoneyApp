// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PVT.Money.Data;
using System;

namespace PVT.Money.Data.Migrations
{
    [DbContext(typeof(MoneyContext))]
    [Migration("20180302064802_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PVT.Money.Data.AccountEntity", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserId");

                    b.Property<string>("AUD_Account")
                        .HasColumnName("AUD_Account");

                    b.Property<string>("EUR_Account")
                        .HasColumnName("EUR_Account");

                    b.Property<string>("USD_Account")
                        .HasColumnName("USD_Account");

                    b.HasKey("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PVT.Money.Data.PermissionEntity", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rule_Id");

                    b.Property<string>("Rule")
                        .HasColumnName("Rules");

                    b.HasKey("RuleId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("PVT.Money.Data.PermissionsRolesEntity", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnName("Role_Id");

                    b.Property<int>("RuleId")
                        .HasColumnName("Rule_Id");

                    b.HasKey("RoleId", "RuleId");

                    b.HasIndex("RuleId");

                    b.ToTable("PermissionsRoles");
                });

            modelBuilder.Entity("PVT.Money.Data.RoleEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Role_Id");

                    b.Property<string>("Description")
                        .HasColumnName("Description");

                    b.Property<string>("Role")
                        .HasColumnName("Role");

                    b.HasKey("ID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PVT.Money.Data.USD_AccountEntity", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WalletId");

                    b.Property<string>("UsdValue")
                        .HasColumnName("USD_Value");

                    b.Property<int>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("WalletId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUSDWallets");
                });

            modelBuilder.Entity("PVT.Money.Data.UserEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id");

                    b.Property<string>("Email")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .HasColumnName("Password");

                    b.Property<int>("Role_Id")
                        .HasColumnName("Role_Id");

                    b.Property<string>("Username")
                        .HasColumnName("Username");

                    b.HasKey("ID");

                    b.HasIndex("Role_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PVT.Money.Data.PermissionsRolesEntity", b =>
                {
                    b.HasOne("PVT.Money.Data.RoleEntity", "UserRoles")
                        .WithMany("Permission")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PVT.Money.Data.PermissionEntity", "Permissions")
                        .WithMany("Role")
                        .HasForeignKey("RuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PVT.Money.Data.USD_AccountEntity", b =>
                {
                    b.HasOne("PVT.Money.Data.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PVT.Money.Data.UserEntity", b =>
                {
                    b.HasOne("PVT.Money.Data.RoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("Role_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
